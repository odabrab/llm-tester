//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  TELA DO LLAMA
////////
////////  File name:         LlamaView.js.
////////  Author:            Marcio Barbado, Jr.
////////  Contact:           <marcio.barbado@bdslabs.com.br>.
////////  Place:             S&atilde;o Paulo, Brasil.
////////  Copyright (c):     2024.
////////  License:           General Public License, version 2.
////////
////////  App's name:        LLM Tester.
////////  App's description: it tests LLM services.
////////
////////  This program is free software; you can redistribute it
////////  and/or modify it under the terms of the GNU General Public
////////  License as published by the Free Software Foundation;
////////  either version 2 of the License, or (at your option) any
////////  later version.
////////
////////  This program is distributed in the hope that it will be
////////  useful, but WITHOUT ANY WARRANTY; without even the implied
////////  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
////////  PURPOSE. See the GNU General Public License for more
////////  details.
////////
////////  You should have received a copy of the GNU General Public
////////  License along with this program; if not, write to the Free
////////  Software Foundation, Inc., 59 Temple Place, Suite 330,
////////  Boston, MA 02111-1307 USA
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  ESTRUTURA DO CONTEÚDO DESTE FICHEIRO
////////
////////  Representa-se abaixo a estrutura deste ficheiro. O sufixo
////////  (CC) denota um trecho com comentários e código, e o sufixo
////////  (CO) denota um trecho com comentários apenas. Pense nisto
////////  como um sumário.
////////
////////  (CO) UTILIZAÇÃO
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CO) UTILIZAÇÃO
////////
////////  O presente componente permite interação multimodal com o LLM
////////  Gemini, i.e., pode-se enviar textos e imagens, e receber
////////  respostas em texto.
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CC) BIBLIOTECA(S)
////////
////////  O módulo fs permite trabalhar com o sistema de arquivos
////////  local sob o ponto de vista da aplicação.
////////
////////  O módulo @google/generative-ai pressupõe a utilização de um
////////  ambiente Node.js.
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

import { useState } from 'react';

//  SafeAreaView é uma opção a View. Ambas estão em react-native.
import {
  Button,
  Image,
  Text,
  TextInput,
  TouchableOpacity,
  View,
} from 'react-native';

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CC) BIBLIOTECA(S) LOCAL(IS)
////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

import Library from './Library.js';
import styles from './Styles.js';

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CO) FUNÇÃO(ÕES)
////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  FUNÇÃO LLAMAVIEW()
////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
function LlamaView({ navigation }) {

//////////////////////////////////////////////////////////////////////
////////  (CC) VARIÁVEL DE ESTADO SVA_PROMPT
////////
//////////////////////////////////////////////////////////////////////
  const [sva_prompt, fun_setPrompt]     = useState('');



  return (

    <View style={styles.containerViewOutter}>
    
      <Text style={styles.paragraph}>
        LLM Tester
      </Text>

      <Image
        source = {require('../assets/Llama-purple.png')}
      />

      <TextInput
        autoCapitalize       = "none"
        onChangeText         = {fun_setPrompt}
        placeholder          = "Prompt"
        placeholderTextColor = "#8b9cb5"
        style                = {styles.txti}
        value                = {sva_prompt}
      />

      <Button
        accessibilityLabel   = "Enviar"
        onPress              = {() => navigation.navigate("LlamaResponseView", {
                                      
                                        var_prompt: sva_prompt
                                      })
                               }
        title                = "Enviar"
      />

      <View style={styles.containerRowFooterInitialView}>

        <TouchableOpacity

          onPress={() => navigation.navigate('RegisterView')}
          style={styles.btnTouchableLeft}>
          <Text style={styles.btnLabelAccount}>
            CRIAR CONTA
          </Text>

        </TouchableOpacity>

      </View>
    </View>
  );
} //  Fim da função LlamaView().

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CO) DECLARAÇÃO(ÕES) E INICIALIZAÇÃO(ÕES)
////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CO) DECLARAÇÃO(ÕES) E INICIALIZAÇÃO(ÕES) RESTRITA(S)
////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CC) BODY
////////
////////  Exporta-se então a função da tela, e assim se garante que
////////  ela pode ser importada, o que de fato ocorre em App.js.
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

export default LlamaView;

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CC) FIM
////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
