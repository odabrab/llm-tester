//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  LLAMA RESPONSE VIEW LIBRARY
////////
////////  File name:         LlamaResponseView.js.
////////  Author:            Marcio Barbado, Jr.
////////  Contact:           <marcio.barbado@bdslabs.com.br>.
////////  Place:             S&atilde;o Paulo, Brasil. 
////////  Copyright (c):     2024.
////////  License:           General Public License, version 2.
////////
////////  App's name:        .
////////  App's description: .
////////
////////  This program is free software; you can redistribute it
////////  and/or modify it under the terms of the GNU General Public
////////  License as published by the Free Software Foundation;
////////  either version 2 of the License, or (at your option) any
////////  later version.
////////  
////////  This program is distributed in the hope that it will be
////////  useful, but WITHOUT ANY WARRANTY; without even the implied
////////  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
////////  PURPOSE. See the GNU General Public License for more
////////  details.
////////  
////////  You should have received a copy of the GNU General Public
////////  License along with this program; if not, write to the Free
////////  Software Foundation, Inc., 59 Temple Place, Suite 330,
////////  Boston, MA 02111-1307 USA
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CC) BIBLIOTECAS
////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

import { useKeepAwake } from 'expo-keep-awake';

import * as Linking from 'expo-linking';

import * as Network from 'expo-network';

import { useState } from 'react';

import { ScrollView, Text, TouchableOpacity, View } from 'react-native';

import { Card } from 'react-native-paper';

import { useRoute } from '@react-navigation/native';

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CC) BIBLIOTECA(S) LOCAL(IS)
////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

import Library from './Library.js';

import styles from './Styles.js';

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CO) FUNÇÃO(ÕES)
////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  FUNÇÃO GEMINIRESPONSEVIEW()
////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
function LlamaResponseView({ navigation }){

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CC) VARIÁVEL DE ESTADO SVA_RESPONSE
////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
  const [sva_response, fun_setResponse] = useState(null);

  useKeepAwake();

  return (
    <View style={styles.containerViewOutter}>
      <ScrollView>
        <Card style={styles.crdJobsView}>
          <Card.Content>
            <View style={styles.containerRow}>
              <Text style={styles.paragraph01}>
                RESPOSTA{"\n"}
                {Run()}
              </Text>

              <TouchableOpacity
                onPress={() => navigation.navigate("RegisterView")}
                style={styles.btnTouchable00}
              >

                <Text style = {styles.btnLabel}>
                  Analisar
                </Text>

              </TouchableOpacity>

            </View>

          </Card.Content>

        </Card>
      </ScrollView>
    </View>
  );
} //  Fim da função GeminiResponseView().

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CC) FUNÇÃO RUN()
////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
async function Run(var_par_str_prompt){

  const con_route        = useRoute();

  const con_prompt       = con_route.params?.var_prompt;

  try{

    Linking.openURL('http://api.whatsapp.com/send?phone=&text=${con_prompt}');
  }

  catch (excecao_llamaresponseview_0000){

    Linking.openURL('whatsapp://send?phone=&text=${con_prompt}');
  }

  


  const response     = await con_obj_promiseResult.response;
  const con_str_text = response.text();

  return con_str_text;
} //  Fim da função run().

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CO) DECLARAÇÃO(ÕES) E INICIALIZAÇÃO(ÕES)
////////
////////  Declarações e inicializações de constantes e variáveis.
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CO) DECLARAÇÃO(ÕES) E INICIALIZAÇÃO(ÕES) RESTRITA(S)
////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CC) CORPO
////////
////////  .
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

export default LlamaResponseView;

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////  (CC) ENDING
////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
